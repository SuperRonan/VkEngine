#version 460 core

#include <Shaders:/common.glsl>

layout(local_size_x = 256) in;

uniform layout(SHADER_DESCRIPTOR_BINDING + 0, r8ui) restrict uimage2D img;

uniform layout(SHADER_DESCRIPTOR_BINDING + 1, std430) restrict readonly buffer 
{
    ivec2 pos[];
} positions;

void main()
{
    const int index = gl_GlobalInvocationID.x;

    const ivec2 dims = imageSize(img);

    ivec2 pos = positions.pos[index];

    if(all(lessThan(pos, dims)))
    {
        imageAtomicXor(img, pos, 0xFF);
    }
}